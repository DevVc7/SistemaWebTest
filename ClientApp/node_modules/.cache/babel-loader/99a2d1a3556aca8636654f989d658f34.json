{"ast":null,"code":"var _jsxFileName = \"D:\\\\VICTOR CAMA\\\\075_SistemaVentaReactJSNet-master\\\\ClientApp\\\\src\\\\views\\\\Categoria.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Card, CardBody, CardHeader, Button, Modal, ModalHeader, ModalBody, Label, Input, FormGroup, ModalFooter } from \"reactstrap\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modeloCategoria = {\n  idCategoria: 0,\n  descripcion: \"\",\n  esActivo: true\n};\n\nconst Categoria = () => {\n  _s();\n\n  const [categoria, setCategoria] = useState(modeloCategoria);\n  const [pendiente, setPendiente] = useState(true);\n  const [categorias, setCategorias] = useState([]);\n  const [verModal, setVerModal] = useState(false);\n\n  const handleChange = e => {\n    let value = e.target.nodeName === \"SELECT\" ? e.target.value == \"true\" ? true : false : e.target.value;\n    setCategoria({ ...categoria,\n      [e.target.name]: value\n    });\n  };\n\n  const obtenerCategorias = async () => {\n    let response = await fetch(\"api/categoria/Lista\");\n\n    if (response.ok) {\n      let data = await response.json();\n      setCategorias(data);\n      setPendiente(false);\n    }\n  };\n\n  useEffect(() => {\n    obtenerCategorias();\n  }, []);\n  const columns = [{\n    name: 'Descripcion',\n    selector: row => row.descripcion,\n    sortable: true\n  }, {\n    name: 'Estado',\n    selector: row => row.esActivo,\n    sortable: true,\n    cell: row => {\n      let clase;\n      clase = row.esActivo ? \"badge badge-info p-2\" : \"badge badge-danger p-2\";\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: clase,\n        children: row.esActivo ? \"Activo\" : \"No Activo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    name: '',\n    cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        className: \"mr-2\",\n        onClick: () => abrirEditarModal(row),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pen-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: () => eliminarCategoria(row.idCategoria),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }];\n  const customStyles = {\n    headCells: {\n      style: {\n        fontSize: '13px',\n        fontWeight: 800\n      }\n    },\n    headRow: {\n      style: {\n        backgroundColor: \"#eee\"\n      }\n    }\n  };\n  const paginationComponentOptions = {\n    rowsPerPageText: 'Filas por pÃ¡gina',\n    rangeSeparatorText: 'de',\n    selectAllRowsItem: true,\n    selectAllRowsItemText: 'Todos'\n  };\n\n  const abrirEditarModal = data => {\n    setCategoria(data);\n    setVerModal(!verModal);\n  };\n\n  const cerrarModal = () => {\n    setCategoria(modeloCategoria);\n    setVerModal(!verModal);\n  };\n\n  const guardarCambios = async () => {\n    let response;\n\n    if (categoria.idCategoria == 0) {\n      response = await fetch(\"api/categoria/Guardar\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(categoria)\n      });\n    } else {\n      response = await fetch(\"api/categoria/Editar\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(categoria)\n      });\n    }\n\n    if (response.ok) {\n      await obtenerCategorias();\n      setCategoria(modeloCategoria);\n      setVerModal(!verModal);\n    } else {\n      alert(\"error al guardar\");\n    }\n  };\n\n  const eliminarCategoria = async id => {\n    Swal.fire({\n      title: 'Esta seguro?',\n      text: \"Desesa eliminar esta categoria\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, continuar',\n      cancelButtonText: 'No, volver'\n    }).then(result => {\n      if (result.isConfirmed) {\n        const response = fetch(\"api/categoria/Eliminar/\" + id, {\n          method: \"DELETE\"\n        }).then(response => {\n          if (response.ok) {\n            obtenerCategorias();\n            Swal.fire('Eliminado!', 'La categoria fue eliminada.', 'success');\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        style: {\n          backgroundColor: '#4e73df',\n          color: \"white\"\n        },\n        children: \"Lista de Categorias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          size: \"sm\",\n          onClick: () => setVerModal(!verModal),\n          children: \"Nueva Categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: categorias,\n          progressPending: pendiente,\n          pagination: true,\n          paginationComponentOptions: paginationComponentOptions,\n          customStyles: customStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: verModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Detalle Categoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            bsSize: \"sm\",\n            name: \"descripcion\",\n            onChange: handleChange,\n            value: categoria.descripcion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            bsSize: \"sm\",\n            type: \"select\",\n            name: \"esActivo\",\n            onChange: handleChange,\n            value: categoria.esActivo,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Activo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"No Activo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          onClick: guardarCambios,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          onClick: cerrarModal,\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Categoria, \"c1O1/HWgs3/LTJznKkIGyKwmxrE=\");\n\n_c = Categoria;\nexport default Categoria;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categoria\");","map":{"version":3,"sources":["D:/VICTOR CAMA/075_SistemaVentaReactJSNet-master/ClientApp/src/views/Categoria.js"],"names":["useEffect","useState","DataTable","Card","CardBody","CardHeader","Button","Modal","ModalHeader","ModalBody","Label","Input","FormGroup","ModalFooter","Swal","modeloCategoria","idCategoria","descripcion","esActivo","Categoria","categoria","setCategoria","pendiente","setPendiente","categorias","setCategorias","verModal","setVerModal","handleChange","e","value","target","nodeName","name","obtenerCategorias","response","fetch","ok","data","json","columns","selector","row","sortable","cell","clase","abrirEditarModal","eliminarCategoria","customStyles","headCells","style","fontSize","fontWeight","headRow","backgroundColor","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","cerrarModal","guardarCambios","method","headers","body","JSON","stringify","alert","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Card, CardBody, CardHeader, Button, Modal, ModalHeader, ModalBody, Label, Input, FormGroup, ModalFooter } from \"reactstrap\"\nimport Swal from 'sweetalert2'\n\nconst modeloCategoria = {\n    idCategoria:0,\n    descripcion: \"\",\n    esActivo: true\n}\n\nconst Categoria = () => {\n\n    const [categoria, setCategoria] = useState(modeloCategoria);\n    const [pendiente, setPendiente] = useState(true);\n    const [categorias, setCategorias] = useState([]);\n    const [verModal, setVerModal] = useState(false);\n\n    const handleChange = (e) => {\n        let value = e.target.nodeName === \"SELECT\" ? (e.target.value == \"true\" ? true : false) : e.target.value;\n\n        setCategoria({\n            ...categoria,\n            [e.target.name]: value\n        })\n    }\n\n    const obtenerCategorias = async () => {\n        let response = await fetch(\"api/categoria/Lista\");\n\n        if (response.ok) {\n            let data = await response.json()\n            setCategorias(data)\n            setPendiente(false)\n        }\n    }\n\n    useEffect(() => {\n        obtenerCategorias();\n    }, [])\n\n\n    const columns = [\n        {\n            name: 'Descripcion',\n            selector: row => row.descripcion,\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: row => row.esActivo,\n            sortable: true,\n            cell: row => {\n                let clase;\n                clase = row.esActivo ? \"badge badge-info p-2\" : \"badge badge-danger p-2\"\n                return (\n                    <span className={clase}>{row.esActivo ? \"Activo\" : \"No Activo\"}</span>\n                )\n            }\n        },\n        {\n            name: '',\n            cell: row => (\n                <>\n                    <Button color=\"primary\" size=\"sm\" className=\"mr-2\"\n                        onClick={() => abrirEditarModal(row) }\n                    >\n                        <i className=\"fas fa-pen-alt\"></i>\n                    </Button>\n\n                    <Button color=\"danger\" size=\"sm\"\n                        onClick={ () => eliminarCategoria(row.idCategoria)}\n                    >\n                        <i className=\"fas fa-trash-alt\"></i>\n                    </Button>\n                </>\n            ),\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                fontSize: '13px',\n                fontWeight: 800,\n            },\n        },\n        headRow: {\n            style: {\n                backgroundColor: \"#eee\",\n            }\n        }\n    };\n\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por pÃ¡gina',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n\n\n    const abrirEditarModal = (data) => {\n        setCategoria(data);\n        setVerModal(!verModal);\n    }\n\n    const cerrarModal = () => {\n        setCategoria(modeloCategoria)\n        setVerModal(!verModal);\n    }\n\n    const guardarCambios = async () => {\n\n        let response;\n        if (categoria.idCategoria == 0) {\n            response = await fetch(\"api/categoria/Guardar\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(categoria)\n            })\n           \n        } else {\n            response = await fetch(\"api/categoria/Editar\", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(categoria)\n            })\n        }\n\n        if (response.ok) {\n            await obtenerCategorias();\n            setCategoria(modeloCategoria)\n            setVerModal(!verModal);\n\n        } else {\n            alert(\"error al guardar\")\n        }\n\n    }\n\n\n    const eliminarCategoria = async(id) => {\n\n        Swal.fire({\n            title: 'Esta seguro?',\n            text: \"Desesa eliminar esta categoria\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, continuar',\n            cancelButtonText: 'No, volver'\n        }).then((result) => {\n            if (result.isConfirmed) {\n\n                const response = fetch(\"api/categoria/Eliminar/\" + id, { method: \"DELETE\" })\n                    .then( response => {\n                        if (response.ok) {\n\n                            obtenerCategorias();\n\n                            Swal.fire(\n                                'Eliminado!',\n                                'La categoria fue eliminada.',\n                                'success'\n                            )\n                        }\n                    })\n               \n            }\n        })\n    }\n    \n    return (\n        <>\n            <Card>\n                <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                    Lista de Categorias\n                </CardHeader>\n                <CardBody>\n                    <Button color=\"success\" size=\"sm\" onClick={() => setVerModal(!verModal) }>Nueva Categoria</Button>\n                    <hr></hr>\n                    <DataTable\n                        columns={columns}\n                        data={categorias}\n                        progressPending={pendiente}\n                        pagination\n                        paginationComponentOptions={paginationComponentOptions}\n                        customStyles={ customStyles}\n                    />\n                </CardBody>\n            </Card>\n\n            <Modal isOpen={verModal}>\n                <ModalHeader>\n                    Detalle Categoria\n                </ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>DescripciÃ³n</Label>\n                        <Input bsSize=\"sm\" name=\"descripcion\" onChange={handleChange} value={categoria.descripcion}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Estado</Label>\n                        <Input bsSize=\"sm\" type={\"select\"} name=\"esActivo\" onChange={handleChange} value={categoria.esActivo} >\n                            <option value={true}>Activo</option>\n                            <option value={false}>No Activo</option>\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" color=\"primary\" onClick={guardarCambios}>Guardar</Button>\n                    <Button size=\"sm\" color=\"danger\" onClick={cerrarModal}>Cerrar</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n        \n\n\n    )\n}\n\nexport default Categoria;"]},"metadata":{},"sourceType":"module"}