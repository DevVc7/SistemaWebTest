{"ast":null,"code":"var _jsxFileName = \"D:\\\\VICTOR CAMA\\\\075_SistemaVentaReactJSNet-master\\\\ClientApp\\\\src\\\\views\\\\Venta.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, InputGroup, InputGroupText, Label, Row, Table, Button } from \"reactstrap\";\nimport Swal from 'sweetalert2';\nimport Autosuggest from 'react-autosuggest';\nimport { useContext, useState } from \"react\";\nimport \"./css/Venta.css\";\nimport { UserContext } from \"../context/UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modelo = {\n  nombre: \"\",\n  correo: \"\",\n  idRolNavigation: {\n    idRol: 0,\n    descripcion: \"\"\n  }\n};\n\nconst Venta = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [a_Productos, setA_Productos] = useState([]);\n  const [a_Busqueda, setA_Busqueda] = useState(\"\");\n  const [documentoCliente, setDocumentoCliente] = useState(\"\");\n  const [nombreCliente, setNombreCliente] = useState(\"\");\n  const [tipoDocumento, setTipoDocumento] = useState(\"Boleta\");\n  const [productos, setProductos] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [subTotal, setSubTotal] = useState(0);\n  const [igv, setIgv] = useState(0);\n\n  const reestablecer = () => {\n    setDocumentoCliente(\"\");\n    setNombreCliente(\"\");\n    setTipoDocumento(\"Boleta\");\n    setProductos([]);\n    setTotal(0);\n    setSubTotal(0);\n    setIgv(0);\n  }; //para obtener la lista de sugerencias\n\n\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    const api = fetch(\"api/venta/Productos/\" + value).then(response => {\n      return response.ok ? response.json() : Promise.reject(response);\n    }).then(dataJson => {\n      setA_Productos(dataJson);\n    }).catch(error => {\n      console.log(\"No se pudo obtener datos, mayor detalle: \", error);\n    });\n  }; //funcion que nos permite borrar las sugerencias\n\n\n  const onSuggestionsClearRequested = () => {\n    setA_Productos([]);\n  }; //devuelve el texto que se mostrara en la caja de texto del autocomplete cuando seleccionas una sugerencia (item)\n\n\n  const getSuggestionValue = sugerencia => {\n    return sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion;\n  }; //como se debe mostrar las sugerencias - codigo htmlf\n\n\n  const renderSuggestion = sugerencia => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this); //evento cuando cambie el valor del texto de busqueda\n\n\n  const onChange = (e, {\n    newValue\n  }) => {\n    setA_Busqueda(newValue);\n  };\n\n  const inputProps = {\n    placeholder: \"Buscar producto\",\n    value: a_Busqueda,\n    onChange\n  };\n\n  const sugerenciaSeleccionada = (event, {\n    suggestion,\n    suggestionValue,\n    suggestionIndex,\n    sectionIndex,\n    method\n  }) => {\n    Swal.fire({\n      title: suggestion.marca + \" - \" + suggestion.descripcion,\n      text: \"Ingrese la cantidad\",\n      input: 'text',\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Aceptar',\n      cancelButtonText: 'Volver',\n      showLoaderOnConfirm: true,\n      preConfirm: inputValue => {\n        if (isNaN(parseFloat(inputValue))) {\n          setA_Busqueda(\"\");\n          Swal.showValidationMessage(\"Debe ingresar un valor númerico\");\n        } else {\n          let producto = {\n            idProducto: suggestion.idProducto,\n            descripcion: suggestion.descripcion,\n            cantidad: parseInt(inputValue),\n            precio: suggestion.precio,\n            total: suggestion.precio * parseFloat(inputValue)\n          };\n          let arrayProductos = [];\n          arrayProductos.push(...productos);\n          arrayProductos.push(producto);\n          setProductos(anterior => [...anterior, producto]);\n          calcularTotal(arrayProductos);\n        }\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(result => {\n      if (result.isConfirmed) {\n        setA_Busqueda(\"\");\n      } else {\n        setA_Busqueda(\"\");\n      }\n    });\n  };\n\n  const eliminarProducto = id => {\n    let listaproductos = productos.filter(p => p.idProducto != id);\n    setProductos(listaproductos);\n    calcularTotal(listaproductos);\n  };\n\n  const calcularTotal = arrayProductos => {\n    let t = 0;\n    let st = 0;\n    let imp = 0;\n\n    if (arrayProductos.length > 0) {\n      arrayProductos.forEach(p => {\n        t = p.total + t;\n      });\n      st = t / 1.18;\n      imp = t - st;\n    } //Monto Base = (Monto con IGV) / (1.18)\n    //IGV = (Monto con IGV) – (Monto Base)\n\n\n    setSubTotal(st.toFixed(2));\n    setIgv(imp.toFixed(2));\n    setTotal(t.toFixed(2));\n  };\n\n  const terminarVenta = () => {\n    if (productos.length < 1) {\n      Swal.fire('Opps!', 'No existen productos', 'error');\n      return;\n    }\n\n    let venta = {\n      documentoCliente: documentoCliente,\n      nombreCliente: nombreCliente,\n      tipoDocumento: tipoDocumento,\n      idUsuario: JSON.parse(user).idUsuario,\n      subTotal: parseFloat(subTotal),\n      igv: parseFloat(igv),\n      total: parseFloat(total),\n      listaProductos: productos\n    };\n    const api = fetch(\"api/venta/Registrar\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(venta)\n    }).then(response => {\n      return response.ok ? response.json() : Promise.reject(response);\n    }).then(dataJson => {\n      reestablecer();\n      var data = dataJson;\n      Swal.fire('Venta Creada!', 'Numero de venta : ' + data.numeroDocumento, 'success');\n    }).catch(error => {\n      Swal.fire('Opps!', 'No se pudo crear la venta', 'error');\n      console.log(\"No se pudo enviar la venta \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 8,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              style: {\n                backgroundColor: '#4e73df',\n                color: \"white\"\n              },\n              children: \"Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nro Documento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      bsSize: \"sm\",\n                      value: documentoCliente,\n                      onChange: e => setDocumentoCliente(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nombre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      bsSize: \"sm\",\n                      value: nombreCliente,\n                      onChange: e => setNombreCliente(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              style: {\n                backgroundColor: '#4e73df',\n                color: \"white\"\n              },\n              children: \"Productos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(Autosuggest, {\n                      suggestions: a_Productos,\n                      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n                      onSuggestionsClearRequested: onSuggestionsClearRequested,\n                      getSuggestionValue: getSuggestionValue,\n                      renderSuggestion: renderSuggestion,\n                      inputProps: inputProps,\n                      onSuggestionSelected: sugerenciaSeleccionada\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    striped: true,\n                    size: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Producto\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 281,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Cantidad\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Precio\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Total\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: productos.length < 1 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: /*#__PURE__*/_jsxDEV(\"td\", {\n                          colSpan: \"5\",\n                          children: \"Sin productos\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 57\n                      }, this) : productos.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            color: \"danger\",\n                            size: \"sm\",\n                            onClick: () => eliminarProducto(item.idProducto),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-trash-alt\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 298,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.descripcion\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.cantidad\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.precio\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.total\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 65\n                        }, this)]\n                      }, item.idProducto, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 4,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              style: {\n                backgroundColor: '#4e73df',\n                color: \"white\"\n              },\n              children: \"Detalle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                    size: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"Tipo:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"select\",\n                      value: tipoDocumento,\n                      onChange: e => setTipoDocumento(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Boleta\",\n                        children: \"Boleta\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Factura\",\n                        children: \"Factura\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                    size: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"Sub Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      disabled: true,\n                      value: subTotal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                    size: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"IGV (18%):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      disabled: true,\n                      value: igv\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                    size: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                      children: \"Total:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      disabled: true,\n                      value: total\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                block: true,\n                onClick: terminarVenta,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-money-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this), \" Terminar Venta\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Venta, \"t/WmhBlV4ofHBECMz5A4RCrqXb4=\");\n\n_c = Venta;\nexport default Venta;\n\nvar _c;\n\n$RefreshReg$(_c, \"Venta\");","map":{"version":3,"sources":["D:/VICTOR CAMA/075_SistemaVentaReactJSNet-master/ClientApp/src/views/Venta.js"],"names":["Card","CardBody","CardHeader","Col","FormGroup","Input","InputGroup","InputGroupText","Label","Row","Table","Button","Swal","Autosuggest","useContext","useState","UserContext","modelo","nombre","correo","idRolNavigation","idRol","descripcion","Venta","user","a_Productos","setA_Productos","a_Busqueda","setA_Busqueda","documentoCliente","setDocumentoCliente","nombreCliente","setNombreCliente","tipoDocumento","setTipoDocumento","productos","setProductos","total","setTotal","subTotal","setSubTotal","igv","setIgv","reestablecer","onSuggestionsFetchRequested","value","api","fetch","then","response","ok","json","Promise","reject","dataJson","catch","error","console","log","onSuggestionsClearRequested","getSuggestionValue","sugerencia","codigo","marca","renderSuggestion","onChange","e","newValue","inputProps","placeholder","sugerenciaSeleccionada","event","suggestion","suggestionValue","suggestionIndex","sectionIndex","method","fire","title","text","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","preConfirm","inputValue","isNaN","parseFloat","showValidationMessage","producto","idProducto","cantidad","parseInt","precio","arrayProductos","push","anterior","calcularTotal","allowOutsideClick","isLoading","result","isConfirmed","eliminarProducto","id","listaproductos","filter","p","t","st","imp","length","forEach","toFixed","terminarVenta","venta","idUsuario","JSON","parse","listaProductos","headers","body","stringify","data","numeroDocumento","backgroundColor","color","target","map","item"],"mappings":"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","sourcesContent":["\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, InputGroup, InputGroupText, Label, Row, Table, Button } from \"reactstrap\";\nimport Swal from 'sweetalert2'\nimport Autosuggest from 'react-autosuggest';\nimport { useContext, useState } from \"react\";\nimport \"./css/Venta.css\"\nimport { UserContext } from \"../context/UserProvider\";\n\nconst modelo = {\n    nombre: \"\",\n    correo: \"\",\n    idRolNavigation: {\n        idRol: 0,\n        descripcion: \"\"\n    }\n}\n\nconst Venta = () => {\n    const { user } = useContext(UserContext)\n\n    const [a_Productos, setA_Productos] = useState([])\n    const [a_Busqueda, setA_Busqueda] = useState(\"\")\n\n    const [documentoCliente, setDocumentoCliente] = useState(\"\")\n    const [nombreCliente, setNombreCliente] = useState(\"\")\n\n    const [tipoDocumento,setTipoDocumento] = useState(\"Boleta\")\n    const [productos, setProductos] = useState([])\n    const [total, setTotal] = useState(0)\n    const [subTotal, setSubTotal] = useState(0)\n    const [igv, setIgv] = useState(0)\n\n    const reestablecer = () => {\n        setDocumentoCliente(\"\");\n        setNombreCliente(\"\")\n        setTipoDocumento(\"Boleta\")\n        setProductos([])\n        setTotal(0)\n        setSubTotal(0)\n        setIgv(0)\n    }\n\n    //para obtener la lista de sugerencias\n    const onSuggestionsFetchRequested = ({ value }) => {\n\n        const api = fetch(\"api/venta/Productos/\" + value)\n            .then((response) => {\n                return response.ok ? response.json() : Promise.reject(response);\n            })\n            .then((dataJson) => {\n                setA_Productos(dataJson)\n            }).catch((error) => {\n                console.log(\"No se pudo obtener datos, mayor detalle: \", error)\n            })\n        \n    }\n\n    //funcion que nos permite borrar las sugerencias\n    const onSuggestionsClearRequested = () => {\n        setA_Productos([])\n    }\n\n    //devuelve el texto que se mostrara en la caja de texto del autocomplete cuando seleccionas una sugerencia (item)\n    const getSuggestionValue = (sugerencia) => {\n\n        return sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion\n    }\n\n    //como se debe mostrar las sugerencias - codigo htmlf\n    const renderSuggestion = (sugerencia) => (\n        <span>\n            {sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion}\n        </span>\n     )\n\n    //evento cuando cambie el valor del texto de busqueda\n    const onChange = (e, {newValue}) => {\n        setA_Busqueda(newValue)\n    }\n\n    const inputProps = {\n        placeholder : \"Buscar producto\",\n        value: a_Busqueda,\n        onChange\n    }\n\n    const sugerenciaSeleccionada = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n\n        Swal.fire({\n            title: suggestion.marca +\" - \" + suggestion.descripcion,\n            text:\"Ingrese la cantidad\",\n            input: 'text',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Aceptar',\n            cancelButtonText: 'Volver',\n            showLoaderOnConfirm: true,\n            preConfirm: (inputValue) => {\n\n                \n                if (isNaN(parseFloat(inputValue))) {\n                    setA_Busqueda(\"\")\n                    Swal.showValidationMessage(\n                        \"Debe ingresar un valor númerico\"\n                    )\n                } else {\n\n                    let producto = {\n                        idProducto: suggestion.idProducto,\n                        descripcion: suggestion.descripcion,\n                        cantidad: parseInt(inputValue),\n                        precio: suggestion.precio,\n                        total: suggestion.precio * parseFloat(inputValue)\n                    }\n                    let arrayProductos = []\n                    arrayProductos.push(...productos)\n                    arrayProductos.push(producto)\n\n                    setProductos((anterior) => [...anterior, producto])\n                    calcularTotal(arrayProductos)\n                }\n                \n\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n\n        }).then((result) => {\n            if (result.isConfirmed) {\n                setA_Busqueda(\"\")\n            } else {\n                setA_Busqueda(\"\")\n            }\n        })\n    }\n\n    const eliminarProducto = (id) => {\n\n        let listaproductos = productos.filter(p => p.idProducto != id)\n\n        setProductos(listaproductos)\n\n        calcularTotal(listaproductos)\n    }\n\n    const calcularTotal = (arrayProductos) => {\n        let t = 0;\n        let st = 0;\n        let imp = 0;\n\n        if (arrayProductos.length > 0) {\n\n            arrayProductos.forEach((p) => {\n                t = p.total + t\n            })\n\n            st = t / (1.18)\n            imp = t - st\n        }\n\n        //Monto Base = (Monto con IGV) / (1.18)\n\n        //IGV = (Monto con IGV) – (Monto Base)\n\n        setSubTotal(st.toFixed(2))\n        setIgv(imp.toFixed(2))\n        setTotal(t.toFixed(2))\n    }\n\n    const terminarVenta = () => {\n\n        if (productos.length < 1) {\n            Swal.fire(\n                'Opps!',\n                'No existen productos',\n                'error'\n            )\n            return\n        }\n\n        let venta = {\n            documentoCliente: documentoCliente,\n            nombreCliente: nombreCliente,\n            tipoDocumento: tipoDocumento,\n            idUsuario: JSON.parse(user).idUsuario,\n            subTotal: parseFloat(subTotal),\n            igv: parseFloat(igv),\n            total:parseFloat(total),\n            listaProductos: productos\n        }\n\n\n        const api = fetch(\"api/venta/Registrar\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(venta)\n        })\n        .then((response) => {\n            return response.ok ? response.json() : Promise.reject(response);\n        })\n        .then((dataJson) => {\n            reestablecer();\n            var data = dataJson;\n            Swal.fire(\n                'Venta Creada!',\n                'Numero de venta : ' + data.numeroDocumento,\n                'success'\n            )\n\n        }).catch((error) => {\n            Swal.fire(\n                'Opps!',\n                'No se pudo crear la venta',\n                'error'\n            )\n            console.log(\"No se pudo enviar la venta \", error)\n        })\n\n    }\n\n    return (\n        <Row>\n            <Col sm={8}>\n\n                <Row className=\"mb-2\">\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Cliente\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm={6}>\n                                        <FormGroup>\n                                            <Label>Nro Documento</Label>\n                                            <Input bsSize=\"sm\" value={documentoCliente} onChange={ (e) => setDocumentoCliente(e.target.value)} />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <FormGroup>\n                                            <Label>Nombre</Label>\n                                            <Input bsSize=\"sm\" value={nombreCliente} onChange={(e) => setNombreCliente(e.target.value)}/>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Productos\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <FormGroup>\n                                            <Autosuggest\n                                                suggestions={a_Productos}\n                                                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                                                onSuggestionsClearRequested={onSuggestionsClearRequested}\n                                                getSuggestionValue={getSuggestionValue}\n                                                renderSuggestion={renderSuggestion}\n                                                inputProps={inputProps}\n                                                onSuggestionSelected={sugerenciaSeleccionada}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12}>\n                                        <Table striped size=\"sm\">\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Producto</th>\n                                                    <th>Cantidad</th>\n                                                    <th>Precio</th>\n                                                    <th>Total</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    (productos.length < 1) ? (\n                                                        <tr>\n                                                            <td colSpan=\"5\">Sin productos</td>\n                                                        </tr>\n                                                    ) :\n                                                    (\n                                                        productos.map((item) => (\n                                                            <tr key={item.idProducto}>\n                                                                <td>\n                                                                    <Button color=\"danger\" size=\"sm\"\n                                                                        onClick={() => eliminarProducto(item.idProducto)}\n                                                                    >\n                                                                        <i className=\"fas fa-trash-alt\"></i>\n                                                                    </Button>\n                                                                </td>\n                                                                <td>{item.descripcion}</td>\n                                                                <td>{item.cantidad}</td>\n                                                                <td>{item.precio}</td>\n                                                                <td>{item.total}</td>\n                                                            </tr>\n                                                        ))\n                                                    )\n\n                                                    \n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </Col>\n                                    \n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n\n            <Col sm={4}>\n                <Row className=\"mb-2\">\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Detalle\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Tipo:</InputGroupText>\n                                            <Input type=\"select\" value={tipoDocumento} onChange={ (e) => setTipoDocumento(e.target.value)}>\n                                                <option value=\"Boleta\">Boleta</option>\n                                                <option value=\"Factura\">Factura</option>\n                                            </Input>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Sub Total:</InputGroupText>\n                                            <Input disabled value={subTotal} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>IGV (18%):</InputGroupText>\n                                            <Input disabled value={igv} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Total:</InputGroupText>\n                                            <Input disabled value={total} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                \n                                \n                                \n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <CardBody>\n                                <Button color=\"success\" block onClick={terminarVenta} >\n                                    <i className=\"fas fa-money-check\"></i> Terminar Venta</Button>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Venta;"]},"metadata":{},"sourceType":"module"}