[{"D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\index.js":"1","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\App.js":"2","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\HistorialVenta.js":"3","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\DashBoard.js":"4","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Producto.js":"5","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Inicio.js":"6","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Usuario.js":"7","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Categoria.js":"8","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\ReporteVenta.js":"9","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Login.js":"10","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Venta.js":"11","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\componentes\\VerificarUsuario.js":"12","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\NotFound.js":"13","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\context\\UserProvider.js":"14","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\componentes\\NavBar.js":"15"},{"size":2167,"mtime":1681267532000,"results":"16","hashOfConfig":"17"},{"size":4037,"mtime":1681267532000,"results":"18","hashOfConfig":"17"},{"size":13985,"mtime":1681267532000,"results":"19","hashOfConfig":"17"},{"size":9879,"mtime":1681267532000,"results":"20","hashOfConfig":"17"},{"size":10586,"mtime":1681267532000,"results":"21","hashOfConfig":"17"},{"size":1689,"mtime":1681267532000,"results":"22","hashOfConfig":"17"},{"size":9824,"mtime":1681267532000,"results":"23","hashOfConfig":"17"},{"size":6911,"mtime":1681267532000,"results":"24","hashOfConfig":"17"},{"size":7291,"mtime":1681267532000,"results":"25","hashOfConfig":"17"},{"size":3030,"mtime":1705971926651,"results":"26","hashOfConfig":"17"},{"size":15462,"mtime":1681267532000,"results":"27","hashOfConfig":"17"},{"size":351,"mtime":1681267532000,"results":"28","hashOfConfig":"17"},{"size":561,"mtime":1681267532000,"results":"29","hashOfConfig":"17"},{"size":710,"mtime":1681267532000,"results":"30","hashOfConfig":"17"},{"size":5428,"mtime":1681267532000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ff171i",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"34"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"34"},"D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\index.js",[],["77","78"],"D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\App.js",["79","80","81","82"],"import React, { useContext } from 'react'\nimport { Navigate, Outlet } from 'react-router-dom'\nimport NavBar from './componentes/NavBar'\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './context/UserProvider';\nimport Swal from 'sweetalert2'\nimport { useState } from 'react';\n\nconst modelo = {\n    nombre: \"\",\n    correo: \"\",\n    idRolNavigation: {\n        idRol: 0,\n        descripcion: \"\"\n    }\n}\n\nconst App = () => {\n    const { user, cerrarSession } = useContext(UserContext)\n\n    if (user == null) {\n        return <Navigate to=\"/Login\" />\n    }\n\n    const mostrarModalSalir = () => {\n\n        Swal.fire({\n            title: 'Esta por salir',\n            text: \"Desea cerrar sesion?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, continuar',\n            cancelButtonText: 'No, volver'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                cerrarSession()\n            }\n        })\n\n    }\n\n\n\n    return (\n        <>\n\n            <NavBar />\n\n            {/*Content Wrapper*/}\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n                {/*Main Content*/}\n                <div id=\"content\">\n                    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n                    {/* Sidebar Toggle (Topbar) */}\n                    <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n                        <i className=\"fa fa-bars\"></i>\n                    </button>\n\n                    {/* Topbar Navbar */}\n                    <ul className=\"navbar-nav ml-auto\">\n\n                        <div className=\"topbar-divider d-none d-sm-block\"></div>\n\n                        {/* Nav Item - User Information */}\n                        <li className=\"nav-item dropdown no-arrow\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{ JSON.parse(user).correo }</span>\n                                    <img className=\"img-profile rounded-circle\"\n                                        src={\"./imagen/Foto003.jpg\"} />\n                            </a>\n                            {/* Dropdown - User Information */}\n                            <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n                                aria-labelledby=\"userDropdown\">\n                                <Link className=\"dropdown-item\" to=\"/\">\n                                    <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n                                    Perfil\n                                </Link>\n                                <div className=\"dropdown-divider\"></div>\n                                    <button className=\"dropdown-item\" onClick={mostrarModalSalir}>\n                                      <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n                                      Salir\n                                  </button>\n                            </div>\n                        </li>\n\n                    </ul>\n\n                </nav>\n                    <div className=\"container-fluid\">\n\n                        <Outlet />\n\n                    </div>\n                </div>\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright &copy; Your Website 2020</span>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n\n               \n        </>\n        )\n}\n\nexport default App","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\HistorialVenta.js",["83","84","85","86","87","88"],"ï»¿\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, InputGroup, InputGroupText, Label, Row, Table, Button,Modal,ModalHeader,ModalBody,ModalFooter } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Swal from 'sweetalert2'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState } from \"react\";\n\n\nconst HistorialVenta = () => {\n    const [fechaInicio, setFechaInicio] = useState(new Date());\n    const [fechaFin, setFechaFin] = useState(new Date());\n    const [nroVenta,setNumeroVenta] = useState(\"\")\n    const [buscarPor, setBuscarPor] = useState(\"fecha\")\n\n    const [verModal,setVerModal] = useState(false)\n    const [detalleVenta, setDetalleVenta] = useState({})\n\n    const [ventas,setVentas] = useState([])\n\n    const buscarVenta = () => {\n        let options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n\n        let _fechaInicio = fechaInicio.toLocaleDateString('es-PE', options)\n        let _fechaFin = fechaFin.toLocaleDateString('es-PE', options)\n\n        const api = fetch(`api/venta/Listar?buscarPor=${buscarPor}&numeroVenta=${nroVenta}&fechaInicio=${_fechaInicio}&fechaFin=${_fechaFin}`)\n            .then((response) => {\n                return response.ok ? response.json() : Promise.reject(response);\n            })\n            .then((dataJson) => {\n                var data = dataJson;\n                if (data.length < 1) {\n                    Swal.fire(\n                        'Opps!',\n                        'No se encontraron resultados',\n                        'warning'\n                    )\n                }\n                setVentas(data);\n            }).catch((error) => {\n                setVentas([]);\n                Swal.fire(\n                    'Opps!',\n                    'No se pudo encontrar informaciÃ³n',\n                    'error'\n                )\n            })\n\n    }\n\n    const mostrarModal = (data) => {\n        setDetalleVenta(data)\n        setVerModal(!verModal);\n    }\n\n    \n    return (\n        <>\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                            Historial de ventas\n                        </CardHeader>\n                        <CardBody>\n                            <Row className=\"align-items-end\">\n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Label>Buscar por: </Label>\n                                        <Input type=\"select\" bsSize=\"sm\" onChange={(e) => setBuscarPor(e.target.value)}\n                                            value={buscarPor}\n                                        >\n                                            <option value=\"fecha\">Fechas</option>\n                                            <option value=\"numero\">Numero Venta</option>\n                                        </Input>\n                                    </FormGroup>\n                                </Col>\n                                {\n                                    (buscarPor == \"fecha\") ? (\n                                        <>\n                                            <Col sm={3}>\n                                                <FormGroup>\n                                                    <Label>Fecha Inicio:</Label>\n                                                    <DatePicker\n                                                        className=\"form-control form-control-sm\"\n                                                        selected={fechaInicio}\n                                                        onChange={(date) => setFechaInicio(date)}\n                                                        dateFormat='dd/MM/yyyy'\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n\n                                            <Col sm={3}>\n                                                <FormGroup>\n                                                    <Label>Fecha Fin:</Label>\n                                                    <DatePicker\n                                                        className=\"form-control form-control-sm\"\n                                                        selected={fechaFin}\n                                                        onChange={(date) => setFechaFin(date)}\n                                                        dateFormat='dd/MM/yyyy'\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </>\n                                    ) : (\n                                        <Col sm={3}>\n                                            <FormGroup>\n                                                <Label>Numero venta:</Label>\n                                                <Input bsSize=\"sm\" value={nroVenta} onChange={(e) => setNumeroVenta(e.target.value)} />\n                                            </FormGroup>\n                                        </Col>\n                                    )\n                                }\n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Button color=\"success\" size=\"sm\" block onClick={buscarVenta}>\n                                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i> Buscar\n                                        </Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <Row>\n                                <Col sm=\"12\">\n                                    <Table striped responsive size=\"sm\">\n                                        <thead>\n                                            <tr>\n                                                <th>Fecha Registro</th>\n                                                <th>Numero Venta</th>\n                                                <th>Tipo Documento</th>\n                                                <th>Documento Cliente</th>\n                                                <th>Nombre Cliente</th>\n                                                <th>Total</th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                (ventas.length < 1) ? (\n                                                    <tr>\n                                                        <td colSpan=\"7\" style={{ textAlign: \"center\" }}>\n                                                            Sin resultados\n                                                        </td>\n                                                    </tr>\n                                                ) : (\n\n                                                    ventas.map((item) => (\n                                                        <tr key={item.numeroDocumento}>\n                                                            <td>{item.fechaRegistro}</td>\n                                                            <td>{item.numeroDocumento}</td>\n                                                            <td>{item.tipoDocumento}</td>\n                                                            <td>{item.documentoCliente}</td>\n                                                            <td>{item.nombreCliente}</td>\n                                                            <td>{item.total}</td>\n                                                            <td>\n                                                                <Button size=\"sm\" color=\"info\" outline\n                                                                    onClick={() => mostrarModal(item)}\n                                                                >\n                                                                    <i className=\"fa fa-eye\" aria-hidden=\"true\"></i> Ver detalle\n                                                                </Button>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                )\n                                            }\n                                        </tbody>\n                                    </Table>\n\n                                </Col>\n\n                            </Row>\n\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Modal size=\"lg\" isOpen={verModal}>\n                <ModalHeader>\n                    Detalle Venta\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Fecha Registro:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.fechaRegistro}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Numero Venta:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.numeroDocumento}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Tipo Documento:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.tipoDocumento} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Usuario Registro:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.usuarioRegistro}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Documento Cliente:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.documentoCliente} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Nombre Cliente:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.nombreCliente}/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Sub Total:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.subTotal} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>IGV (18%):</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.impuesto}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm={4}>\n                            <FormGroup>\n                                <Label>Total:</Label>\n                                <Input bsSize=\"sm\" disabled value={detalleVenta.total} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={12}>\n                            <Table size=\"sm\">\n                                <thead>\n                                    <tr>\n                                        <th>Producto</th>\n                                        <th>Cantidad</th>\n                                        <th>Precio</th>\n                                        <th>Total</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        (detalleVenta.detalle == undefined) ? (\n                                            <tr><td colSpan={4}>Sin productos</td></tr>\n                                        ) : (\n                                            detalleVenta.detalle.map((item) => (\n                                                <tr key={item.producto}>\n                                                    <td>{item.producto}</td>\n                                                    <td>{item.cantidad}</td>\n                                                    <td>{item.precio}</td>\n                                                    <td>{item.total}</td>\n                                                </tr>\n                                            ))\n                                        )\n                                    }\n\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" color=\"danger\" onClick={() => setVerModal(!verModal)}>Cerrar</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n        \n\n\n    )\n}\n\nexport default HistorialVenta;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\DashBoard.js",["89","90","91","92","93","94"],"ï»¿import { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale,LinearScale,BarElement,Title } from 'chart.js';\nimport { Doughnut, Bar } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\nconst data_inicio_donut = {\n    labels: ['Sin resultados'],\n    datasets: [\n        {\n            data: [0],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)'\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\n\nconst data_inicio_bar = {\n    labels: ['Sin resultados'],\n    datasets: [\n        {\n            label: 'Cantidad',\n            data: [0],\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        },\n    ],\n};\n\nconst DashBoard = () => {\n\n    const [config, setConfig] = useState({})\n    const [dataDonut, setDataDonut] = useState(data_inicio_donut)\n    const [dataBar, setDataBar] = useState(data_inicio_bar)\n\n    const optionsBar = {\n        maintainAspectRatio: false,\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            }\n        }\n    };\n    const obtenerConfiguracion = () => {\n        const api = fetch(\"api/utilidad/Dashboard\")\n            .then((response) => {\n                return response.ok ? response.json() : Promise.reject(response);\n            })\n            .then((dataJson) => {\n                let d = dataJson;\n\n                let lblsBar = d.ventasporDias.map((item) => { return item.fecha })\n                let dtaBar = d.ventasporDias.map((item) => { return item.total } )\n\n                let lblsDonut = d.productosVendidos.map((item) => { return item.producto })\n                let dtaDonut = d.productosVendidos.map((item) => { return item.total })\n\n                let modeloBar = {\n                    labels: lblsBar,\n                    datasets: [\n                        {\n                            label: 'Cantidad',\n                            data: dtaBar,\n                            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                        },\n                    ]\n                };\n\n                let modeloDonut = {\n                    labels: lblsDonut,\n                    datasets: [\n                        {\n                            data: dtaDonut,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 0.2)',\n                                'rgba(54, 162, 235, 0.2)',\n                                'rgba(255, 206, 86, 0.2)',\n                                'rgba(75, 192, 192, 0.2)'\n                            ],\n                            borderColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)'\n                            ],\n                            borderWidth: 1\n                        },\n                    ],\n                }\n\n                if (d.ventasporDias.length < 1)\n                    setDataBar(data_inicio_bar)\n                else\n                    setDataBar(modeloBar)\n\n                if (d.productosVendidos.length < 1)\n                    setDataDonut(data_inicio_donut)\n                else\n                    setDataDonut(modeloDonut)\n                \n                setConfig(d)\n            }).catch((error) => {\n                console.log(\"error\")\n            })\n\n    }\n    useEffect(() => {\n        obtenerConfiguracion()\n    },[])\n\n    return (\n        <>\n            <div className=\"row\">\n\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Cantidad de Ventas</div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{ (config.totalVentas!= undefined) ? config.totalVentas : \"0\" }</div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-shopping-basket fa-2x text-gray-300\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-success shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                                        Ingresos por Ventas</div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{(config.totalIngresos != undefined) ? config.totalIngresos : \"0\"}</div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-info shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                        Total Productos\n                                    </div>\n                                    <div className=\"row no-gutters align-items-center\">\n                                        <div className=\"col-auto\">\n                                            <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">{(config.totalProductos != undefined) ? config.totalProductos : \"0\"}</div>\n                                        </div>\n                                        <div className=\"col\">\n                                           \n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-xl-3 col-md-6 mb-4\">\n                    <div className=\"card border-left-warning shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                                        Total Categorias\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{(config.totalCategorias != undefined) ? config.totalCategorias : \"0\"}</div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-tags fa-2x text-gray-300\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xl-8 col-lg-7\">\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between bg-primary\">\n                            <h6 className=\"m-0 font-weight-bold text-white\">Ventas de los ultimos 7 dÃ­as</h6>\n\n                        </div>\n                        <div className=\"card-body\">\n                            <div style={{height:350}}>\n                                <Bar options={optionsBar} data={dataBar} />\n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-4 col-lg-5\">\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between bg-primary\">\n                            <h6 className=\"m-0 font-weight-bold text-white\">Productos mÃ¡s vendidos</h6>\n                          \n                        </div>\n                        <div className=\"card-body\">\n                            <div style={{ height: 350 }}>\n                                <Doughnut options={optionsBar} data={dataDonut} />\n                            </div>\n                            \n                        </div>\n                    </div>\n                </div>\n\n               \n            </div>\n        </>\n    )\n}\n\nexport default DashBoard;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Producto.js",["95","96","97","98","99","100","101"],"ï»¿import { useEffect, useState } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Card, CardBody, CardHeader, Button, Modal, ModalHeader, ModalBody, Label, Input, FormGroup, ModalFooter, Row, Col } from \"reactstrap\"\nimport Swal from 'sweetalert2'\n\n\nconst modeloProducto = {\n    idProducto :0,\n    codigo :\"\",\n    marca :\"\",\n    descripcion :\"\",\n    idCategoria :0,\n    stock :0,\n    precio: 0,\n    esActivo: true\n}\n\n\nconst Producto = () => {\n\n    const [producto, setProducto] = useState(modeloProducto);\n    const [pendiente, setPendiente] = useState(true);\n    const [productos, setProductos] = useState([]);\n    const [categorias, setCategorias] = useState([]);\n    const [verModal, setVerModal] = useState(false);\n\n    const handleChange = (e) => {\n\n        console.log(e.target.value)\n\n        let value;\n\n        if (e.target.name == \"idCategoria\") {\n            value = e.target.value\n        } else if (e.target.name == \"esActivo\") {\n            value = (e.target.value == \"true\" ? true : false)\n        } else {\n            value = e.target.value;\n        }\n\n        setProducto({\n            ...producto,\n            [e.target.name]: value\n        })\n\n\n    }\n\n    const obtenerCategorias = async () => {\n        let response = await fetch(\"api/categoria/Lista\");\n        if (response.ok) {\n            let data = await response.json()\n            setCategorias(data)\n        }\n    }\n\n    const obtenerProductos = async () => {\n        let response = await fetch(\"api/producto/Lista\");\n\n        if (response.ok) {\n            let data = await response.json()\n            setProductos(data)\n            setPendiente(false)\n        }\n    }\n\n    useEffect(() => {\n        obtenerCategorias();\n        obtenerProductos();\n    }, [])\n\n\n    const columns = [\n        {\n            name: 'Codigo',\n            selector: row => row.codigo,\n            sortable: true,\n        },\n        {\n            name: 'Marca',\n            selector: row => row.marca,\n            sortable: true,\n        },\n        {\n            name: 'Descripcion',\n            selector: row => row.descripcion,\n            sortable: true,\n        },\n        {\n            name: 'Categoria',\n            selector: row => row.idCategoriaNavigation,\n            sortable: true,\n            cell: row => (row.idCategoriaNavigation.descripcion)\n        },\n        {\n            name: 'Estado',\n            selector: row => row.esActivo,\n            sortable: true,\n            cell: row => {\n                let clase;\n                clase = row.esActivo ? \"badge badge-info p-2\" : \"badge badge-danger p-2\"\n                return (\n                    <span className={clase}>{row.esActivo ? \"Activo\" : \"No Activo\"}</span>\n                )\n            }\n        },\n        {\n            name: '',\n            cell: row => (\n                <>\n                    <Button color=\"primary\" size=\"sm\" className=\"mr-2\"\n                        onClick={() => abrirEditarModal(row)}\n                    >\n                        <i className=\"fas fa-pen-alt\"></i>\n                    </Button>\n\n                    <Button color=\"danger\" size=\"sm\"\n                        onClick={() => eliminarProducto(row.idProducto)}\n                    >\n                        <i className=\"fas fa-trash-alt\"></i>\n                    </Button>\n                </>\n            ),\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                fontSize: '13px',\n                fontWeight: 800,\n            },\n        },\n        headRow: {\n            style: {\n                backgroundColor: \"#eee\",\n            }\n        }\n    };\n\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por pÃ¡gina',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n\n    const abrirEditarModal = (data) => {\n        setProducto(data);\n        setVerModal(!verModal);\n    }\n\n    const cerrarModal = () => {\n        setProducto(modeloProducto)\n        setVerModal(!verModal);\n    }\n\n    const guardarCambios = async () => {\n\n        delete producto.idCategoriaNavigation;\n\n        let response;\n        if (producto.idProducto == 0) {\n            response = await fetch(\"api/producto/Guardar\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(producto)\n            })\n\n        } else {\n            response = await fetch(\"api/producto/Editar\", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(producto)\n            })\n        }\n\n        if (response.ok) {\n            await obtenerProductos();\n            setProducto(modeloProducto)\n            setVerModal(!verModal);\n\n        } else {\n\n            Swal.fire(\n                'Opp!',\n                'No se pudo guardar.',\n                'warning'\n            )\n        }\n\n    }\n\n    const eliminarProducto = async (id) => {\n\n        Swal.fire({\n            title: 'Esta seguro?',\n            text: \"Desea eliminar el producto\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, continuar',\n            cancelButtonText: 'No, volver'\n        }).then((result) => {\n            if (result.isConfirmed) {\n\n                const response = fetch(\"api/producto/Eliminar/\" + id, { method: \"DELETE\" })\n                    .then(response => {\n                        if (response.ok) {\n\n                            obtenerProductos();\n\n                            Swal.fire(\n                                'Eliminado!',\n                                'El producto fue eliminado.',\n                                'success'\n                            )\n                        }\n                    })\n            }\n        })\n    }\n\n    return (\n        <>\n            <Card>\n                <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                    Lista de Productos\n                </CardHeader>\n                <CardBody>\n                    <Button color=\"success\" size=\"sm\" onClick={() => setVerModal(!verModal)}>Nuevo Producto</Button>\n                    <hr></hr>\n                    <DataTable\n                        columns={columns}\n                        data={productos}\n                        progressPending={pendiente}\n                        pagination\n                        paginationComponentOptions={paginationComponentOptions}\n                        customStyles={ customStyles}\n                    />\n                </CardBody>\n            </Card>\n\n            <Modal isOpen={verModal}>\n                <ModalHeader>\n                    Detalle Producto\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Codigo</Label>\n                                <Input bsSize=\"sm\" name=\"codigo\" onChange={handleChange} value={producto.codigo} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Marca</Label>\n                                <Input bsSize=\"sm\" name=\"marca\" onChange={handleChange} value={producto.marca} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Descripcion</Label>\n                                <Input bsSize=\"sm\" name=\"descripcion\" onChange={handleChange} value={producto.descripcion} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Categoria</Label>\n                                <Input bsSize=\"sm\" type={\"select\"} name=\"idCategoria\" onChange={handleChange} value={producto.idCategoria} >\n                                    <option value={0}>Seleccionar</option>\n                                    {\n                                        categorias.map((item) => {\n                                            if (item.esActivo)\n                                                return (<option key={item.idCategoria} value={item.idCategoria}>{item.descripcion}</option>)\n                                        } )\n                                    }\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Stock</Label>\n                                <Input bsSize=\"sm\" name=\"stock\" onChange={handleChange} value={producto.stock} type=\"number\" />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Precio</Label>\n                                <Input bsSize=\"sm\" name=\"precio\" onChange={handleChange} value={producto.precio} type=\"number\"/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\" >\n                            <FormGroup>\n                                <Label>Estado</Label>\n                                <Input bsSize=\"sm\" type={\"select\"} name=\"esActivo\" onChange={handleChange} value={producto.esActivo} >\n                                    <option value={true}>Activo</option>\n                                    <option value={false}>No Activo</option>\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" color=\"primary\" onClick={guardarCambios}>Guardar</Button>\n                    <Button size=\"sm\" color=\"danger\" onClick={cerrarModal}>Cerrar</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nexport default Producto;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Inicio.js",["102","103","104"],"ï»¿import { useState } from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { FormGroup, Input, Label, Row, Col } from \"reactstrap\";\nimport { UserContext } from \"../context/UserProvider\";\n\nconst modelo = {\n    nombre: \"\",\n    correo: \"\",\n    idRolNavigation: {\n        descripcion :\"\"\n    }\n}\n\nconst Inicio = () => {\n\n    const { user } = useContext(UserContext)\n    const [ dataUser, setDataUser ] = useState(modelo)\n\n    useEffect(() => {\n        let dt = JSON.parse(user)\n        setDataUser(dt)\n\n    }, [])\n\n    return (\n        <>\n            <Row>\n                <Col sm={12} className=\"text-left\">\n                    <h2>Bienvenido al sistema</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={3}>\n                    <div className=\"card\">\n                        <img className=\"card-img-top\" src={\"./imagen/Foto003.jpg\"} alt=\"Card image cap\" />\n                    </div>\n                </Col>\n                <Col sm={3}>\n                    <FormGroup>\n                        <Label>Nombre</Label>\n                        <Input disabled value={dataUser.nombre} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Correo</Label>\n                        <Input disabled value={dataUser.correo}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Rol</Label>\n                        <Input disabled value={dataUser.idRolNavigation.descripcion}/>\n                    </FormGroup>\n                </Col>\n                <Col sm={3}>\n                </Col>\n            </Row>\n        </>\n       \n        )\n}\n\nexport default Inicio;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Usuario.js",["105","106","107","108","109","110"],"ï»¿import { useEffect, useState } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Card, CardBody, CardHeader, Button, Modal, ModalHeader, ModalBody, Label, Input, FormGroup, ModalFooter, Row, Col } from \"reactstrap\"\nimport Swal from 'sweetalert2'\n\n\nconst modeloUsuario = {\n    idUsuario: 0,\n    nombre : \"\",\n    correo :\"\",\n    telefono :\"\",\n    idRol :0,\n    clave :\"\",\n    esActivo :true\n}\n\nconst Usuario = () => {\n\n    const [usuario, setUsuario] = useState(modeloUsuario);\n    const [pendiente, setPendiente] = useState(true);\n    const [usuarios, setUsuarios] = useState([]);\n    const [roles, setRoles] = useState([]);\n    const [verModal, setVerModal] = useState(false);\n\n    const handleChange = (e) => {\n\n        console.log(e.target.value )\n\n        let value;\n\n        if (e.target.name == \"idRol\") {\n            value = e.target.value\n        } else if (e.target.name == \"esActivo\") {\n            value = (e.target.value == \"true\" ? true : false)\n        } else {\n            value = e.target.value;\n        }\n\n        setUsuario({\n            ...usuario,\n            [e.target.name]: value\n        })\n    }\n\n\n    const obtenerRoles = async () => {\n        let response = await fetch(\"api/rol/Lista\");\n        if (response.ok) {\n            let data = await response.json()\n            setRoles(data)\n        }\n    }\n\n    const obtenerUsuarios = async () => {\n        let response = await fetch(\"api/usuario/Lista\");\n\n        if (response.ok) {\n            let data = await response.json()\n            setUsuarios(data)\n            setPendiente(false)\n        }\n    }\n\n    useEffect(() => {\n        obtenerRoles();\n        obtenerUsuarios();\n    }, [])\n\n    const columns = [\n        {\n            name: 'Nombre',\n            selector: row => row.nombre,\n            sortable: true,\n        },\n        {\n            name: 'Correo',\n            selector: row => row.correo,\n            sortable: true,\n        },\n        {\n            name: 'Telefono',\n            selector: row => row.telefono,\n            sortable: true,\n        },\n        {\n            name: 'Rol',\n            selector: row => row.idRolNavigation,\n            sortable: true,\n            cell: row => (row.idRolNavigation.descripcion)\n        },\n        {\n            name: 'Estado',\n            selector: row => row.esActivo,\n            sortable: true,\n            cell: row => {\n                let clase;\n                clase = row.esActivo ? \"badge badge-info p-2\" : \"badge badge-danger p-2\"\n                return (\n                    <span className={clase}>{row.esActivo ? \"Activo\" : \"No Activo\"}</span>\n                )\n            }\n        },\n        {\n            name: '',\n            cell: row => (\n                <>\n                    <Button color=\"primary\" size=\"sm\" className=\"mr-2\"\n                        onClick={() => abrirEditarModal(row)}\n                    >\n                        <i className=\"fas fa-pen-alt\"></i>\n                    </Button>\n\n                    <Button color=\"danger\" size=\"sm\"\n                        onClick={() => eliminarUsuario(row.idUsuario)}\n                    >\n                        <i className=\"fas fa-trash-alt\"></i>\n                    </Button>\n                </>\n            ),\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                fontSize: '13px',\n                fontWeight: 800,\n            },\n        },\n        headRow: {\n            style: {\n                backgroundColor: \"#eee\",\n            }\n        }\n    };\n\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por pÃ¡gina',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n\n    const abrirEditarModal = (data) => {\n        setUsuario(data);\n        setVerModal(!verModal);\n    }\n\n    const cerrarModal = () => {\n        setUsuario(modeloUsuario)\n        setVerModal(!verModal);\n    }\n\n    const guardarCambios = async () => {\n\n        delete usuario.idRolNavigation;\n\n        let response;\n        if (usuario.idUsuario == 0) {\n            response = await fetch(\"api/usuario/Guardar\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(usuario)\n            })\n\n        } else {\n            response = await fetch(\"api/usuario/Editar\", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(usuario)\n            })\n        }\n\n        if (response.ok) {\n            await obtenerUsuarios();\n            setUsuario(modeloUsuario)\n            setVerModal(!verModal);\n\n        } else {\n            alert(\"error al guardar\")\n        }\n\n    }\n\n    const eliminarUsuario = async (id) => {\n\n        Swal.fire({\n            title: 'Esta seguro?',\n            text: \"Desea eliminar el usuario\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, continuar',\n            cancelButtonText: 'No, volver'\n        }).then((result) => {\n            if (result.isConfirmed) {\n\n                const response = fetch(\"api/usuario/Eliminar/\" + id, { method: \"DELETE\" })\n                    .then(response => {\n                        if (response.ok) {\n\n                            obtenerUsuarios();\n\n                            Swal.fire(\n                                'Eliminado!',\n                                'El usuario fue eliminado.',\n                                'success'\n                            )\n                        }\n                    })\n            }\n        })\n    }\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                    Lista de Usuarios\n                </CardHeader>\n                <CardBody>\n                    <Button color=\"success\" size=\"sm\" onClick={() => setVerModal(!verModal)}>Nuevo Usuario</Button>\n                    <hr></hr>\n                    <DataTable\n                        columns={columns}\n                        data={usuarios}\n                        progressPending={pendiente}\n                        pagination\n                        paginationComponentOptions={paginationComponentOptions}\n                        customStyles={customStyles}\n                    />\n                </CardBody>\n            </Card>\n\n            <Modal isOpen={verModal}>\n                <ModalHeader>\n                    Detalle Usuario\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Nombre</Label>\n                                <Input bsSize=\"sm\" name=\"nombre\" onChange={handleChange} value={usuario.nombre} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Correo</Label>\n                                <Input bsSize=\"sm\" name=\"correo\" onChange={handleChange} value={usuario.correo} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Telefono</Label>\n                                <Input bsSize=\"sm\" name=\"telefono\" onChange={handleChange} value={usuario.telefono} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm={6}>\n                            <FormGroup>\n                                <Label>Rol</Label>\n                                <Input bsSize=\"sm\" type={\"select\"} name=\"idRol\" onChange={handleChange} value={usuario.idRol} >\n                                    <option value={0}>Seleccionar</option>\n                                    {\n                                        roles.map((item) => (<option key={item.idRol} value={item.idRol}>{item.descripcion}</option>))\n                                    }\n\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\" >\n                            <FormGroup>\n                                <Label>ContraseÃ±a</Label>\n                                <Input bsSize=\"sm\" name=\"clave\" onChange={handleChange} value={usuario.clave} type=\"password\" />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"6\" >\n                            <FormGroup>\n                                <Label>Estado</Label>\n                                <Input bsSize=\"sm\" type={\"select\"} name=\"esActivo\" onChange={handleChange} value={usuario.esActivo} >\n                                    <option value={true}>Activo</option>\n                                    <option value={false}>No Activo</option>\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    \n                   \n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" color=\"primary\" onClick={guardarCambios}>Guardar</Button>\n                    <Button size=\"sm\" color=\"danger\" onClick={cerrarModal}>Cerrar</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nexport default Usuario;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Categoria.js",["111","112","113","114"],"ï»¿import { useEffect, useState } from \"react\";\nimport DataTable from 'react-data-table-component';\nimport { Card, CardBody, CardHeader, Button, Modal, ModalHeader, ModalBody, Label, Input, FormGroup, ModalFooter } from \"reactstrap\"\nimport Swal from 'sweetalert2'\n\nconst modeloCategoria = {\n    idCategoria:0,\n    descripcion: \"\",\n    esActivo: true\n}\n\nconst Categoria = () => {\n\n    const [categoria, setCategoria] = useState(modeloCategoria);\n    const [pendiente, setPendiente] = useState(true);\n    const [categorias, setCategorias] = useState([]);\n    const [verModal, setVerModal] = useState(false);\n\n    const handleChange = (e) => {\n        let value = e.target.nodeName === \"SELECT\" ? (e.target.value == \"true\" ? true : false) : e.target.value;\n\n        setCategoria({\n            ...categoria,\n            [e.target.name]: value\n        })\n    }\n\n    const obtenerCategorias = async () => {\n        let response = await fetch(\"api/categoria/Lista\");\n\n        if (response.ok) {\n            let data = await response.json()\n            setCategorias(data)\n            setPendiente(false)\n        }\n    }\n\n    useEffect(() => {\n        obtenerCategorias();\n    }, [])\n\n\n    const columns = [\n        {\n            name: 'Descripcion',\n            selector: row => row.descripcion,\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: row => row.esActivo,\n            sortable: true,\n            cell: row => {\n                let clase;\n                clase = row.esActivo ? \"badge badge-info p-2\" : \"badge badge-danger p-2\"\n                return (\n                    <span className={clase}>{row.esActivo ? \"Activo\" : \"No Activo\"}</span>\n                )\n            }\n        },\n        {\n            name: '',\n            cell: row => (\n                <>\n                    <Button color=\"primary\" size=\"sm\" className=\"mr-2\"\n                        onClick={() => abrirEditarModal(row) }\n                    >\n                        <i className=\"fas fa-pen-alt\"></i>\n                    </Button>\n\n                    <Button color=\"danger\" size=\"sm\"\n                        onClick={ () => eliminarCategoria(row.idCategoria)}\n                    >\n                        <i className=\"fas fa-trash-alt\"></i>\n                    </Button>\n                </>\n            ),\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                fontSize: '13px',\n                fontWeight: 800,\n            },\n        },\n        headRow: {\n            style: {\n                backgroundColor: \"#eee\",\n            }\n        }\n    };\n\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por pÃ¡gina',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n\n\n    const abrirEditarModal = (data) => {\n        setCategoria(data);\n        setVerModal(!verModal);\n    }\n\n    const cerrarModal = () => {\n        setCategoria(modeloCategoria)\n        setVerModal(!verModal);\n    }\n\n    const guardarCambios = async () => {\n\n        let response;\n        if (categoria.idCategoria == 0) {\n            response = await fetch(\"api/categoria/Guardar\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(categoria)\n            })\n           \n        } else {\n            response = await fetch(\"api/categoria/Editar\", {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(categoria)\n            })\n        }\n\n        if (response.ok) {\n            await obtenerCategorias();\n            setCategoria(modeloCategoria)\n            setVerModal(!verModal);\n\n        } else {\n            alert(\"error al guardar\")\n        }\n\n    }\n\n\n    const eliminarCategoria = async(id) => {\n\n        Swal.fire({\n            title: 'Esta seguro?',\n            text: \"Desesa eliminar esta categoria\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, continuar',\n            cancelButtonText: 'No, volver'\n        }).then((result) => {\n            if (result.isConfirmed) {\n\n                const response = fetch(\"api/categoria/Eliminar/\" + id, { method: \"DELETE\" })\n                    .then( response => {\n                        if (response.ok) {\n\n                            obtenerCategorias();\n\n                            Swal.fire(\n                                'Eliminado!',\n                                'La categoria fue eliminada.',\n                                'success'\n                            )\n                        }\n                    })\n               \n            }\n        })\n    }\n    \n    return (\n        <>\n            <Card>\n                <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                    Lista de Categorias\n                </CardHeader>\n                <CardBody>\n                    <Button color=\"success\" size=\"sm\" onClick={() => setVerModal(!verModal) }>Nueva Categoria</Button>\n                    <hr></hr>\n                    <DataTable\n                        columns={columns}\n                        data={categorias}\n                        progressPending={pendiente}\n                        pagination\n                        paginationComponentOptions={paginationComponentOptions}\n                        customStyles={ customStyles}\n                    />\n                </CardBody>\n            </Card>\n\n            <Modal isOpen={verModal}>\n                <ModalHeader>\n                    Detalle Categoria\n                </ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>DescripciÃ³n</Label>\n                        <Input bsSize=\"sm\" name=\"descripcion\" onChange={handleChange} value={categoria.descripcion}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Estado</Label>\n                        <Input bsSize=\"sm\" type={\"select\"} name=\"esActivo\" onChange={handleChange} value={categoria.esActivo} >\n                            <option value={true}>Activo</option>\n                            <option value={false}>No Activo</option>\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" color=\"primary\" onClick={guardarCambios}>Guardar</Button>\n                    <Button size=\"sm\" color=\"danger\" onClick={cerrarModal}>Cerrar</Button>\n                </ModalFooter>\n            </Modal>\n        </>\n        \n\n\n    )\n}\n\nexport default Categoria;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\ReporteVenta.js",["115","116","117","118","119","120","121","122","123","124"],"ï»¿import { Card, CardBody, CardHeader, Col, FormGroup, Input, InputGroup, InputGroupText, Label, Row, Table, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport Swal from 'sweetalert2'\nimport DataTable from 'react-data-table-component';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState } from \"react\";\n\nimport * as XLSX from \"xlsx\"\n\nconst modeloInicio = [{\n    fechaRegistro : \"\",\n    numeroDocumento: \"\",\n    tipoDocumento: \"\",\n    documentoCliente: \"\",\n    nombreCliente: \"\",\n    subTotalVenta: \"\",\n    impuestoTotalVenta: \"\",\n    totalVenta: \"\",\n    producto: \"\",\n    cantidad: \"\",\n    precio: \"\",\n    total: \"\"\n}]\n\nconst ReporteVenta = () => {\n    const [fechaInicio, setFechaInicio] = useState(new Date());\n    const [fechaFin, setFechaFin] = useState(new Date());\n    const [pendiente, setPendiente] = useState(false);\n    const [ventas, setVentas] = useState(modeloInicio)\n\n\n    const buscar = () => {\n\n        setPendiente(true)\n        let options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n\n        let _fechaInicio = fechaInicio.toLocaleDateString('es-PE', options)\n        let _fechaFin = fechaFin.toLocaleDateString('es-PE', options)\n\n        const api = fetch(`api/venta/Reporte?fechaInicio=${_fechaInicio}&fechaFin=${_fechaFin}`)\n            .then((response) => {\n                return response.ok ? response.json() : Promise.reject(response);\n            })\n            .then((dataJson) => {\n                var data = dataJson;\n                setPendiente(false)\n                if (data.length < 1) {\n                    Swal.fire(\n                        'Opps!',\n                        'No se encontraron resultados',\n                        'warning'\n                    )\n                }\n                setVentas(data);\n            }).catch((error) => {\n                setVentas([]);\n                Swal.fire(\n                    'Opps!',\n                    'No se pudo encontrar informaciÃ³n',\n                    'error'\n                )\n            })\n    }\n \n    const columns = [\n        {\n            name: 'Fecha Registro',\n            selector: row => row.fechaRegistro,\n        },\n        {\n            name: 'Numero Venta',\n            selector: row => row.numeroDocumento,\n        },\n        {\n            name: 'Tipo Documento',\n            selector: row => row.tipoDocumento,\n        },\n        {\n            name: 'Documento Cliente',\n            selector: row => row.documentoCliente,\n        },\n        {\n            name: 'Nombre Cliente',\n            selector: row => row.nombreCliente,\n        },\n        {\n            name: 'Sub Total Venta',\n            selector: row => row.subTotalVenta,\n        },\n        {\n            name: 'Impuesto Total Venta',\n            selector: row => row.impuestoTotalVenta,\n        },\n        {\n            name: 'Total Venta',\n            selector: row => row.totalVenta,\n        },\n        {\n            name: 'Producto',\n            sortable: true,\n            grow: 2,\n            maxWidth: '600px',\n            selector: row => row.producto,\n        },\n        {\n            name: 'Cantidad',\n            selector: row => row.cantidad,\n        },\n        {\n            name: 'Precio',\n            selector: row => row.precio,\n        },\n        {\n            name: 'Total',\n            selector: row => row.total,\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                fontSize: '13px',\n                fontWeight: 800,\n            },\n        },\n        headRow: {\n            style: {\n                backgroundColor: \"#eee\",\n            }\n        }\n    };\n\n    const exportarExcel = () => {\n        var wb = XLSX.utils.book_new();\n        var ws = XLSX.utils.json_to_sheet(ventas);\n\n        XLSX.utils.book_append_sheet(wb, ws, \"Reporte\");\n        XLSX.writeFile(wb, \"Reporte Ventas.xlsx\")\n    }\n\n    return (\n        <>\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                            Reporte de ventas\n                        </CardHeader>\n                        <CardBody>\n                            <Row className=\"align-items-end\">\n                                \n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Label>Fecha Inicio:</Label>\n                                        <DatePicker\n                                            className=\"form-control form-control-sm\"\n                                            selected={fechaInicio}\n                                            onChange={(date) => setFechaInicio(date)}\n                                            dateFormat='dd/MM/yyyy'\n                                        />\n                                    </FormGroup>\n                                </Col>\n\n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Label>Fecha Fin:</Label>\n                                        <DatePicker\n                                            className=\"form-control form-control-sm\"\n                                            selected={fechaFin}\n                                            onChange={(date) => setFechaFin(date)}\n                                            dateFormat='dd/MM/yyyy'\n                                        />\n                                    </FormGroup>\n                                </Col>\n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Button color=\"primary\" size=\"sm\" block onClick={buscar}>\n                                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i> Buscar\n                                        </Button>\n                                    </FormGroup>\n                                </Col>\n\n                                <Col sm={3}>\n                                    <FormGroup>\n                                        <Button color=\"success\" size=\"sm\" block onClick={exportarExcel}>\n                                            <i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Exportar\n                                        </Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <hr></hr>\n                            <Row>\n\n                                <Col sm=\"12\">\n                                    <DataTable\n                                        progressPending={pendiente}\n                                        columns={columns}\n                                        data={ventas}\n                                        customStyles={customStyles}\n                                    />\n                                  \n\n                                </Col>\n\n                            </Row>\n\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n\n            \n        </>\n    )\n}\n\nexport default ReporteVenta;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Login.js",["125","126","127"],"ï»¿import { useContext, useState } from \"react\"\nimport { UserContext } from \"../context/UserProvider\"\nimport Swal from 'sweetalert2'\nimport { Navigate } from \"react-router-dom\"\n\nconst Login = () => {\n\n    const [_correo, set_Correo] = useState(\"\")\n    const [_clave, set_Clave] = useState(\"\")\n    const { user, iniciarSession } = useContext(UserContext)\n\n    if (user != null) {\n        return <Navigate to=\"/\"/>\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        let request = {\n            correo: _correo,\n            clave:_clave\n        }\n\n        const api = fetch(\"api/session/Login\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(request)\n        })\n        .then((response) => {\n            return response.ok ? response.json() : Promise.reject(response);\n        })\n        .then((dataJson) => {\n            if (dataJson.idUsuario == 0) {\n                Swal.fire(\n                    'Opps!',\n                    'No se encontro el usuario',\n                    'error'\n                )\n            } else {\n                iniciarSession(dataJson)\n            }\n\n        }).catch((error) => {\n            Swal.fire(\n                'Opps!',\n                'No se pudo iniciar sessiÃ³n',\n                'error'\n            )\n        })\n    }\n\n    return (\n        \n        <div className=\"container\" id=\"logcontainer\">\n\n            <div className=\"row justify-content-center m-1\" >\n\n                <div className=\"col-md-6 col-sm-8 col-xl-4 col-lg-5 formulario\">\n                    <form className=\"user\" onSubmit={handleSubmit}>\n                        <div className=\"form-group text-center pt-3\">\n                            <h1 className=\"text-light\">BIENVENIDO</h1>\n                        </div>\n                        <div className=\"form-group mx-sm-4 pt-3\">\n                            <input type=\"email\" className=\"form-control form-control-user\" aria-describedby=\"emailHelp\" placeholder=\"Correo\"\n                                value={_correo}\n                                onChange={(e) => set_Correo(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group mx-sm-4 pt-3\">\n                            <input type=\"password\" className=\"form-control form-control-user\" placeholder=\"ContraseÃ±a\"\n                                value={_clave}\n                                onChange={(e) => set_Clave(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group mx-sm-4 pb-2\" >\n                            <input type=\"submit\" id=\"ingresar\" className=\"btn btn-block ingresar\" value=\"INGRESAR\"></input>\n                        </div>\n                        \n\n                    </form>\n\n                    \n\n                </div>\n\n            </div>\n\n        </div>\n        )\n}\n\nexport default Login","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\Venta.js",["128","129","130","131","132"],"ï»¿\nimport { Card, CardBody, CardHeader, Col, FormGroup, Input, InputGroup, InputGroupText, Label, Row, Table, Button } from \"reactstrap\";\nimport Swal from 'sweetalert2'\nimport Autosuggest from 'react-autosuggest';\nimport { useContext, useState } from \"react\";\nimport \"./css/Venta.css\"\nimport { UserContext } from \"../context/UserProvider\";\n\nconst modelo = {\n    nombre: \"\",\n    correo: \"\",\n    idRolNavigation: {\n        idRol: 0,\n        descripcion: \"\"\n    }\n}\n\nconst Venta = () => {\n    const { user } = useContext(UserContext)\n\n    const [a_Productos, setA_Productos] = useState([])\n    const [a_Busqueda, setA_Busqueda] = useState(\"\")\n\n    const [documentoCliente, setDocumentoCliente] = useState(\"\")\n    const [nombreCliente, setNombreCliente] = useState(\"\")\n\n    const [tipoDocumento,setTipoDocumento] = useState(\"Boleta\")\n    const [productos, setProductos] = useState([])\n    const [total, setTotal] = useState(0)\n    const [subTotal, setSubTotal] = useState(0)\n    const [igv, setIgv] = useState(0)\n\n    const reestablecer = () => {\n        setDocumentoCliente(\"\");\n        setNombreCliente(\"\")\n        setTipoDocumento(\"Boleta\")\n        setProductos([])\n        setTotal(0)\n        setSubTotal(0)\n        setIgv(0)\n    }\n\n    //para obtener la lista de sugerencias\n    const onSuggestionsFetchRequested = ({ value }) => {\n\n        const api = fetch(\"api/venta/Productos/\" + value)\n            .then((response) => {\n                return response.ok ? response.json() : Promise.reject(response);\n            })\n            .then((dataJson) => {\n                setA_Productos(dataJson)\n            }).catch((error) => {\n                console.log(\"No se pudo obtener datos, mayor detalle: \", error)\n            })\n        \n    }\n\n    //funcion que nos permite borrar las sugerencias\n    const onSuggestionsClearRequested = () => {\n        setA_Productos([])\n    }\n\n    //devuelve el texto que se mostrara en la caja de texto del autocomplete cuando seleccionas una sugerencia (item)\n    const getSuggestionValue = (sugerencia) => {\n\n        return sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion\n    }\n\n    //como se debe mostrar las sugerencias - codigo htmlf\n    const renderSuggestion = (sugerencia) => (\n        <span>\n            {sugerencia.codigo + \" - \" + sugerencia.marca + \" - \" + sugerencia.descripcion}\n        </span>\n     )\n\n    //evento cuando cambie el valor del texto de busqueda\n    const onChange = (e, {newValue}) => {\n        setA_Busqueda(newValue)\n    }\n\n    const inputProps = {\n        placeholder : \"Buscar producto\",\n        value: a_Busqueda,\n        onChange\n    }\n\n    const sugerenciaSeleccionada = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n\n        Swal.fire({\n            title: suggestion.marca +\" - \" + suggestion.descripcion,\n            text:\"Ingrese la cantidad\",\n            input: 'text',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Aceptar',\n            cancelButtonText: 'Volver',\n            showLoaderOnConfirm: true,\n            preConfirm: (inputValue) => {\n\n                \n                if (isNaN(parseFloat(inputValue))) {\n                    setA_Busqueda(\"\")\n                    Swal.showValidationMessage(\n                        \"Debe ingresar un valor nÃºmerico\"\n                    )\n                } else {\n\n                    let producto = {\n                        idProducto: suggestion.idProducto,\n                        descripcion: suggestion.descripcion,\n                        cantidad: parseInt(inputValue),\n                        precio: suggestion.precio,\n                        total: suggestion.precio * parseFloat(inputValue)\n                    }\n                    let arrayProductos = []\n                    arrayProductos.push(...productos)\n                    arrayProductos.push(producto)\n\n                    setProductos((anterior) => [...anterior, producto])\n                    calcularTotal(arrayProductos)\n                }\n                \n\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n\n        }).then((result) => {\n            if (result.isConfirmed) {\n                setA_Busqueda(\"\")\n            } else {\n                setA_Busqueda(\"\")\n            }\n        })\n    }\n\n    const eliminarProducto = (id) => {\n\n        let listaproductos = productos.filter(p => p.idProducto != id)\n\n        setProductos(listaproductos)\n\n        calcularTotal(listaproductos)\n    }\n\n    const calcularTotal = (arrayProductos) => {\n        let t = 0;\n        let st = 0;\n        let imp = 0;\n\n        if (arrayProductos.length > 0) {\n\n            arrayProductos.forEach((p) => {\n                t = p.total + t\n            })\n\n            st = t / (1.18)\n            imp = t - st\n        }\n\n        //Monto Base = (Monto con IGV) / (1.18)\n\n        //IGV = (Monto con IGV) â (Monto Base)\n\n        setSubTotal(st.toFixed(2))\n        setIgv(imp.toFixed(2))\n        setTotal(t.toFixed(2))\n    }\n\n    const terminarVenta = () => {\n\n        if (productos.length < 1) {\n            Swal.fire(\n                'Opps!',\n                'No existen productos',\n                'error'\n            )\n            return\n        }\n\n        let venta = {\n            documentoCliente: documentoCliente,\n            nombreCliente: nombreCliente,\n            tipoDocumento: tipoDocumento,\n            idUsuario: JSON.parse(user).idUsuario,\n            subTotal: parseFloat(subTotal),\n            igv: parseFloat(igv),\n            total:parseFloat(total),\n            listaProductos: productos\n        }\n\n\n        const api = fetch(\"api/venta/Registrar\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(venta)\n        })\n        .then((response) => {\n            return response.ok ? response.json() : Promise.reject(response);\n        })\n        .then((dataJson) => {\n            reestablecer();\n            var data = dataJson;\n            Swal.fire(\n                'Venta Creada!',\n                'Numero de venta : ' + data.numeroDocumento,\n                'success'\n            )\n\n        }).catch((error) => {\n            Swal.fire(\n                'Opps!',\n                'No se pudo crear la venta',\n                'error'\n            )\n            console.log(\"No se pudo enviar la venta \", error)\n        })\n\n    }\n\n    return (\n        <Row>\n            <Col sm={8}>\n\n                <Row className=\"mb-2\">\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Cliente\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col sm={6}>\n                                        <FormGroup>\n                                            <Label>Nro Documento</Label>\n                                            <Input bsSize=\"sm\" value={documentoCliente} onChange={ (e) => setDocumentoCliente(e.target.value)} />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <FormGroup>\n                                            <Label>Nombre</Label>\n                                            <Input bsSize=\"sm\" value={nombreCliente} onChange={(e) => setNombreCliente(e.target.value)}/>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Productos\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <FormGroup>\n                                            <Autosuggest\n                                                suggestions={a_Productos}\n                                                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                                                onSuggestionsClearRequested={onSuggestionsClearRequested}\n                                                getSuggestionValue={getSuggestionValue}\n                                                renderSuggestion={renderSuggestion}\n                                                inputProps={inputProps}\n                                                onSuggestionSelected={sugerenciaSeleccionada}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12}>\n                                        <Table striped size=\"sm\">\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Producto</th>\n                                                    <th>Cantidad</th>\n                                                    <th>Precio</th>\n                                                    <th>Total</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    (productos.length < 1) ? (\n                                                        <tr>\n                                                            <td colSpan=\"5\">Sin productos</td>\n                                                        </tr>\n                                                    ) :\n                                                    (\n                                                        productos.map((item) => (\n                                                            <tr key={item.idProducto}>\n                                                                <td>\n                                                                    <Button color=\"danger\" size=\"sm\"\n                                                                        onClick={() => eliminarProducto(item.idProducto)}\n                                                                    >\n                                                                        <i className=\"fas fa-trash-alt\"></i>\n                                                                    </Button>\n                                                                </td>\n                                                                <td>{item.descripcion}</td>\n                                                                <td>{item.cantidad}</td>\n                                                                <td>{item.precio}</td>\n                                                                <td>{item.total}</td>\n                                                            </tr>\n                                                        ))\n                                                    )\n\n                                                    \n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </Col>\n                                    \n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n\n            <Col sm={4}>\n                <Row className=\"mb-2\">\n                    <Col sm={12}>\n                        <Card>\n                            <CardHeader style={{ backgroundColor: '#4e73df', color: \"white\" }}>\n                                Detalle\n                            </CardHeader>\n                            <CardBody>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Tipo:</InputGroupText>\n                                            <Input type=\"select\" value={tipoDocumento} onChange={ (e) => setTipoDocumento(e.target.value)}>\n                                                <option value=\"Boleta\">Boleta</option>\n                                                <option value=\"Factura\">Factura</option>\n                                            </Input>\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Sub Total:</InputGroupText>\n                                            <Input disabled value={subTotal} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mb-2\">\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>IGV (18%):</InputGroupText>\n                                            <Input disabled value={igv} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12}>\n                                        <InputGroup size=\"sm\" >\n                                            <InputGroupText>Total:</InputGroupText>\n                                            <Input disabled value={total} />\n                                        </InputGroup>\n                                    </Col>\n                                </Row>\n                                \n                                \n                                \n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <CardBody>\n                                <Button color=\"success\" block onClick={terminarVenta} >\n                                    <i className=\"fas fa-money-check\"></i> Terminar Venta</Button>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Venta;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\componentes\\VerificarUsuario.js",["133"],"ï»¿import { useContext } from \"react\"\nimport { UserContext } from \"../context/UserProvider\"\nimport { Navigate } from \"react-router-dom\"\n\n\nconst VerificarUsuario = ({children}) => {\n\n    const { user } = useContext(UserContext)\n\n    if (user == null) {\n        return <Navigate to=\"/Login\"/>\n    }\n    return children\n}\n\nexport default VerificarUsuario","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\views\\NotFound.js",["134"],"ï»¿import { Link } from \"react-router-dom\"\n\n\nconst NotFound = () => {\n    return (\n        <div className=\"container-fluid pt-5\">\n\n            <div className=\"text-center mt-5\">\n                <div className=\"error mx-auto my-auto\" data-text=\"404\">404</div>\n                <p className=\"lead text-gray-800 mb-5\">Page Not Found</p>\n                <p className=\"text-gray-500 mb-0\">It looks like you found a glitch in the matrix...</p>\n                <Link to=\"/Login\">Regresar</Link>\n            </div>\n\n        </div>\n        )\n\n}\n\n\nexport default NotFound;","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\context\\UserProvider.js",["135"],"ï»¿import { useState } from \"react\"\nimport { createContext } from \"react\"\n\n\nexport const UserContext = createContext()\n\nconst UserProvider = ({children}) => {\n    const [user, setUser] = useState(window.localStorage.getItem(\"sesion_usuario\"))\n\n\n    const iniciarSession = (data) => {\n        window.localStorage.setItem(\"sesion_usuario\",JSON.stringify(data))\n        setUser(JSON.stringify(data))\n    }\n\n    const cerrarSession = () => {\n        window.localStorage.removeItem(\"sesion_usuario\")\n        setUser(null)\n    }\n\n    return (\n        <UserContext.Provider value={{ user, iniciarSession, cerrarSession}}>\n            {children}\n        </UserContext.Provider>\n        )\n}\n\nexport default UserProvider","D:\\VICTOR CAMA\\075_SistemaVentaReactJSNet-master\\ClientApp\\src\\componentes\\NavBar.js",["136","137","138","139","140","141","142","143","144","145"],"ï»¿import React, { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { UserContext } from '../context/UserProvider';\n\nconst modelo = {\n    nombre: \"\",\n    correo: \"\",\n    idRolNavigation: {\n        idRol:0,\n        descripcion: \"\"\n    }\n}\nconst NavBar = () => {\n\n    const { user} = useContext(UserContext);\n\n    const [dataUser, setDataUser] = useState(modelo)\n\n    useEffect(() => {\n        let dt = JSON.parse(user)\n        setDataUser(dt)\n\n    }, [])\n    return (\n        \n        <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n            <Link className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\n                <div className=\"sidebar-brand-icon\">\n                    <i className=\"fas fa-desktop\"></i>\n                </div>\n                <div className=\"sidebar-brand-text mx-3\">Mi Tienda</div>\n            </Link>\n\n\n            <hr className=\"sidebar-divider my-0\" />\n\n            {\n                (dataUser.idRolNavigation.descripcion == \"Administrador\") &&\n                <li className=\"nav-item\">\n                    <NavLink to=\"/dashboard\" className=\"nav-link\" >\n                        <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n                        <span>Dashboard</span>\n                    </NavLink>\n                </li>\n            }\n           \n\n            <hr className=\"sidebar-divider\" />\n            {\n                (dataUser.idRolNavigation.descripcion == \"Administrador\") &&\n                <li className=\"nav-item\">\n                    <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUsuario\"\n                        aria-expanded=\"true\" aria-controls=\"collapseUsuario\">\n                        <i className=\"fas fa-fw fa-cog\"></i>\n                        <span>Administracion</span>\n                    </a>\n                    <div id=\"collapseUsuario\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <NavLink to=\"/usuario\" className=\"collapse-item\">Usuarios</NavLink>\n                        </div>\n                    </div>\n                </li>\n            }\n            \n            {\n                (dataUser.idRolNavigation.descripcion == \"Administrador\") &&\n                <li className=\"nav-item\">\n                    <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseInventario\"\n                        aria-expanded=\"true\" aria-controls=\"collapseInventario\">\n                        <i className=\"fas fa-fw fa-box\"></i>\n                        <span>Inventario</span>\n                    </a>\n                    <div id=\"collapseInventario\" className=\"collapse\" aria-labelledby=\"headingUtilities\"\n                        data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <NavLink to=\"/producto\" className=\"collapse-item\">Productos</NavLink>\n                            <NavLink to=\"/categoria\" className=\"collapse-item\">Categorias</NavLink>\n                        </div>\n                    </div>\n                </li>\n            }\n           \n\n            <li className=\"nav-item\">\n                <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseVenta\"\n                    aria-expanded=\"true\" aria-controls=\"collapseVenta\">\n                    <i className=\"fas fa-fw fa-tag\"></i>\n                    <span>Ventas</span>\n                </a>\n                <div id=\"collapseVenta\" className=\"collapse\" aria-labelledby=\"headingUtilities\"\n                    data-parent=\"#accordionSidebar\">\n                    <div className=\"bg-white py-2 collapse-inner rounded\">\n                        <NavLink to=\"/venta\" className=\"collapse-item\">Nueva Venta</NavLink>\n                        <NavLink to=\"/historialventa\" className=\"collapse-item\">Historial Venta</NavLink>\n                    </div>\n                </div>\n            </li>\n\n\n            {(dataUser.idRolNavigation.descripcion == \"Administrador\") &&\n                <li className=\"nav-item\">\n                    <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseReporte\"\n                        aria-expanded=\"true\" aria-controls=\"collapseReporte\">\n                        <i className=\"fas fa-fw fa-chart-area\"></i>\n                        <span>Reportes</span>\n                    </a>\n                    <div id=\"collapseReporte\" className=\"collapse\" aria-labelledby=\"headingUtilities\"\n                        data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <NavLink to=\"/reporteventa\" className=\"collapse-item\">Reporte Venta</NavLink>\n                        </div>\n                    </div>\n                </li>\n            }\n            \n\n\n            <hr className=\"sidebar-divider d-none d-md-block\" />\n\n            <div className=\"text-center d-none d-md-inline\">\n                <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n            </div>\n\n        </ul>\n        )\n}\n\nexport default NavBar;",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"154","line":9,"column":7,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":70,"column":29,"nodeType":"157","endLine":71,"endColumn":99},{"ruleId":"158","severity":1,"message":"159","line":73,"column":37,"nodeType":"157","endLine":74,"endColumn":72},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"164"},{"ruleId":"150","severity":1,"message":"165","line":2,"column":61,"nodeType":"152","messageId":"153","endLine":2,"endColumn":71},{"ruleId":"150","severity":1,"message":"166","line":2,"column":73,"nodeType":"152","messageId":"153","endLine":2,"endColumn":87},{"ruleId":"150","severity":1,"message":"167","line":27,"column":15,"nodeType":"152","messageId":"153","endLine":27,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":80,"column":48,"nodeType":"170","messageId":"163","endLine":80,"endColumn":50},{"ruleId":"168","severity":1,"message":"169","line":257,"column":63,"nodeType":"170","messageId":"163","endLine":257,"endColumn":65},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"171"},{"ruleId":"150","severity":1,"message":"167","line":51,"column":15,"nodeType":"152","messageId":"153","endLine":51,"endColumn":18},{"ruleId":"168","severity":1,"message":"172","line":128,"column":114,"nodeType":"170","messageId":"163","endLine":128,"endColumn":116},{"ruleId":"168","severity":1,"message":"172","line":145,"column":116,"nodeType":"170","messageId":"163","endLine":145,"endColumn":118},{"ruleId":"168","severity":1,"message":"172","line":165,"column":130,"nodeType":"170","messageId":"163","endLine":165,"endColumn":132},{"ruleId":"168","severity":1,"message":"172","line":188,"column":118,"nodeType":"170","messageId":"163","endLine":188,"endColumn":120},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"173"},{"ruleId":"168","severity":1,"message":"169","line":33,"column":27,"nodeType":"170","messageId":"163","endLine":33,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":35,"column":34,"nodeType":"170","messageId":"163","endLine":35,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":36,"column":37,"nodeType":"170","messageId":"163","endLine":36,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":163,"column":33,"nodeType":"170","messageId":"163","endLine":163,"endColumn":35},{"ruleId":"150","severity":1,"message":"174","line":212,"column":23,"nodeType":"152","messageId":"153","endLine":212,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":281,"column":63,"nodeType":"177","messageId":"178","endLine":281,"endColumn":65},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"179"},{"ruleId":"180","severity":1,"message":"181","line":23,"column":8,"nodeType":"182","endLine":23,"endColumn":10,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":35,"column":25,"nodeType":"157","endLine":35,"endColumn":107},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"186"},{"ruleId":"168","severity":1,"message":"169","line":31,"column":27,"nodeType":"170","messageId":"163","endLine":31,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":33,"column":34,"nodeType":"170","messageId":"163","endLine":33,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":34,"column":37,"nodeType":"170","messageId":"163","endLine":34,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":159,"column":31,"nodeType":"170","messageId":"163","endLine":159,"endColumn":33},{"ruleId":"150","severity":1,"message":"174","line":203,"column":23,"nodeType":"152","messageId":"153","endLine":203,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"187"},{"ruleId":"168","severity":1,"message":"169","line":20,"column":70,"nodeType":"170","messageId":"163","endLine":20,"endColumn":72},{"ruleId":"168","severity":1,"message":"169","line":116,"column":35,"nodeType":"170","messageId":"163","endLine":116,"endColumn":37},{"ruleId":"150","severity":1,"message":"174","line":161,"column":23,"nodeType":"152","messageId":"153","endLine":161,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"188"},{"ruleId":"150","severity":1,"message":"189","line":1,"column":54,"nodeType":"152","messageId":"153","endLine":1,"endColumn":59},{"ruleId":"150","severity":1,"message":"165","line":1,"column":61,"nodeType":"152","messageId":"153","endLine":1,"endColumn":71},{"ruleId":"150","severity":1,"message":"166","line":1,"column":73,"nodeType":"152","messageId":"153","endLine":1,"endColumn":87},{"ruleId":"150","severity":1,"message":"190","line":1,"column":101,"nodeType":"152","messageId":"153","endLine":1,"endColumn":106},{"ruleId":"150","severity":1,"message":"191","line":1,"column":116,"nodeType":"152","messageId":"153","endLine":1,"endColumn":121},{"ruleId":"150","severity":1,"message":"192","line":1,"column":123,"nodeType":"152","messageId":"153","endLine":1,"endColumn":134},{"ruleId":"150","severity":1,"message":"193","line":1,"column":136,"nodeType":"152","messageId":"153","endLine":1,"endColumn":145},{"ruleId":"150","severity":1,"message":"194","line":1,"column":147,"nodeType":"152","messageId":"153","endLine":1,"endColumn":158},{"ruleId":"150","severity":1,"message":"167","line":40,"column":15,"nodeType":"152","messageId":"153","endLine":40,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"195"},{"ruleId":"150","severity":1,"message":"167","line":24,"column":15,"nodeType":"152","messageId":"153","endLine":24,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":35,"column":36,"nodeType":"170","messageId":"163","endLine":35,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"196"},{"ruleId":"150","severity":1,"message":"154","line":9,"column":7,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"167","line":46,"column":15,"nodeType":"152","messageId":"153","endLine":46,"endColumn":18},{"ruleId":"168","severity":1,"message":"172","line":140,"column":65,"nodeType":"170","messageId":"163","endLine":140,"endColumn":67},{"ruleId":"150","severity":1,"message":"167","line":194,"column":15,"nodeType":"152","messageId":"153","endLine":194,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"197"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"198"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"199"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","messageId":"163","fix":"200"},{"ruleId":"180","severity":1,"message":"181","line":25,"column":8,"nodeType":"182","endLine":25,"endColumn":10,"suggestions":"201"},{"ruleId":"168","severity":1,"message":"169","line":41,"column":55,"nodeType":"170","messageId":"163","endLine":41,"endColumn":57},{"ruleId":"168","severity":1,"message":"169","line":53,"column":55,"nodeType":"170","messageId":"163","endLine":53,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":55,"column":21,"nodeType":"157","endLine":56,"endColumn":78},{"ruleId":"168","severity":1,"message":"169","line":69,"column":55,"nodeType":"170","messageId":"163","endLine":69,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":71,"column":21,"nodeType":"157","endLine":72,"endColumn":81},{"ruleId":"155","severity":1,"message":"156","line":88,"column":17,"nodeType":"157","endLine":89,"endColumn":72},{"ruleId":"168","severity":1,"message":"169","line":103,"column":52,"nodeType":"170","messageId":"163","endLine":103,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":105,"column":21,"nodeType":"157","endLine":106,"endColumn":78},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'modelo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"204","text":"205"},"'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'api' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"206","text":"205"},"Expected '!==' and instead saw '!='.",{"range":"207","text":"205"},"'response' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"range":"208","text":"205"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["209"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"210","text":"205"},{"range":"211","text":"205"},{"range":"212","text":"205"},"'Input' is defined but never used.","'Table' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.",{"range":"213","text":"205"},{"range":"214","text":"205"},{"range":"215","text":"205"},{"range":"216","text":"205"},{"range":"217","text":"205"},{"range":"218","text":"205"},["219"],"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],{"desc":"220","fix":"221"},[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"220","fix":"222"},"Update the dependencies array to be: [user]",{"range":"223","text":"224"},{"range":"225","text":"224"},[519,521],"[user]",[551,553]]